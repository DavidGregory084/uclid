module fib
{
    sharedvar a, b : integer;

    init {
        // assume (a >= 0);
        // assume (b >  0);
        // assume (a <= b);
    }

    next {
        a' = b;
        b' = a + b;
    }
}

module main
{
    var as : integer;
    var bs : integer;
    instance fibs : fib(a : (as), b : (bs));

    init {
        assume (fibs.a == fibs.a && fibs.b == fibs.b);
    }

    next {
        next (fibs);
        next (fibs);
    }

    property b_are_eq : fibs.b == fibs.b;
    property a_are_eq : fibs.a == fibs.a;
    property b_gt_0  : fibs.b > 0 && fibs.b > 0;
    property a_ge_0  : fibs.a >= 0 && fibs.a >= 0;
    property a_le_b  : fibs.a <= fibs.b && fibs.a <= fibs.b;

    control {
        v = unroll(5);
        // v = induction;
        check;
        print_results;
    }
}
