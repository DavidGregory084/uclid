module fib
{
    sharedvar a, b : integer;

    init {
        a = 0;
        b = 1;
    }

    next {
        a' = b;
        b' = a + b;
    }
}

module main
{
    var as : [integer]integer;
    var bs : [integer]integer;
    instances fibs : [integer]fib(a : (as), b : (bs));

    init {
        assume(as[1] == as[2]);
        assume(bs[1] == bs[2]);
        assume(as[1] == 0);
        assume(bs[1] == 1);
    }

    next {
        if (*) {
            next (fibs[1]);
        } else {
            next (fibs[2]);
        }
    }

    property b_are_eq : bs[1] == bs[2];
    property a_are_eq : as[1] == as[2];
    property b_gt_0  : bs[1] > 0 && bs[2] > 0;
    property a_ge_0  : as[1] >= 0 && as[2] >= 0;
    property a_le_b  : as[1] <= bs[1] && as[2] <= bs[2];

    control {
        v = induction;
        check;
        print_results;
        v.print_cex(as[1], bs[1], as[2], bs[2]);
    }
}
